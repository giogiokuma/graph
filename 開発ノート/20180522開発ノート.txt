20180604

jQuery で コードを出力した方が簡単　＞　セキュリティーが心配




* jQuery を使わずにセキュリティ高い　XMLHttpRequest() を *

https://www.websec-room.com/2015/06/28/2257
----------
20180604
index10.html  > タイトルを自動的に入力
問題  innerHTML エラーになる
        var element_title = document.getElementById("title_data_" + data[item].id);
        element_title.innerHTML = data[item].title;
        console.log(element_title);


<script>

function getData() {
  var xmlhttp = new XMLHttpRequest();
  var url = "network_transfer2.json";

  xmlhttp.onreadystatechange = function() {
      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
          var myArr = JSON.parse(xmlhttp.responseText);
          insertData(myArr);

      }
  }
  xmlhttp.open("GET", url, true);
  xmlhttp.send();
}

function insertData(data) {
    var output = "";
    for (var item in data) {
        //var element = document.getElementById("article_" + data[item].id);
        
        // セクションエレメント取得
        var element_sec = document.getElementById("sec_data_" + data[item].id);
        element_sec.innerHTML = data[item].sec;
        console.log(element_sec); 
        //element_sec.innerHTML = data[item].sec;
        // タイトル取得
        //var element_title = data[item].title;

        // キャプション取得
        //var element_caption = data[item].caption; 

        // 本文
        //var element_text = data[item].text; 


//        element.innerHTML = data[item].id + "\n" + data[item].sec + "\n" + data[item].title + "\n" + data[item].caption + "\n" + data[item].text;
        
    }
}

</script>
上のコードで　コンソールログすると
<h3 id="sec_data_1" class="feature-item__section-title">特集</h3>
....
<h3 id="sec_data_12" class="contents-item-2col__title">ぐんま湯けむり浪漫</h3>
<h3 id="sec_data_13" class="contents-item-2col__title">おさんぽ日和／安中のちょっといいもの</h3>
-------





---------
20180601

更新手順
1. エクセルファイルを作成
transfer.xlxs
  => transfer.json に変換
  

2.　slider を　自動的に動かす
 
---------

20180531

データー
element_id
element_sec = セクション
element_title = タイトル
element_caption = キャプション
element_text = 本文



-----------

20180529

【重要】HTML にデータを流し込んでいると考える

-----------
データをつくる




-------------
axois と vuejs を使って json >  https サーバーで　ブロックされて　エラーに　> 読込めない


 > 従って、ライブラリは使わず　
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.js"></script>
<script src="https://npmcdn.com/vue/dist/vue.js"></script>

---------------------
axois とvuejs を使って json ファイルを読み込む

https://kagasu.hatenablog.com/entry/2017/07/23/170037

1. html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
</head>
<body>
  <div id="app">
    <ul>
      <li v-for="character in characters">{{ character.name }}</li>
    </ul>
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.2/vue.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.16.2/axios.min.js"></script>
<script>
  var app = new Vue({
    el: '#app', 
    data: {
      characters: []
    },
    methods: {
      async getCharacters() {
        var url = 'https://gist.githubusercontent.com/anonymous/c41ae1698aca3595b95d1496ebf42d83/raw/2addeb281bcb4aae2be9c8204c0ec623c4cb446c/characters.json'
        await axios.get(url).then(
          x => { this.characters = x.data; }
        );
      }
    },
    mounted() {
      this.getCharacters();
    }
  })
</script>

</body>
</html>